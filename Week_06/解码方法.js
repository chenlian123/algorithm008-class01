// 一条包含字母 A-Z 的消息通过以下方式进行了编码：
//
// 'A' -> 1
// 'B' -> 2
// ...
// 'Z' -> 26
// 给定一个只包含数字的非空字符串，请计算解码方法的总数。
//
// 示例 1:
//
// 输入: "12"
// 输出: 2
// 解释: 它可以解码为 "AB"（1 2）或者 "L"（12）。
// 示例 2:
//
// 输入: "226"
// 输出: 3
// 解释: 它可以解码为 "BZ" (2 26), "VF" (22 6), 或者 "BBF" (2 2 6) 。


var numDecodings = function(s) {
    if (s[0] === '0') {
        return 0
    }
    let dp = [ 1 ] // 处理掉n = 0的的边界条件
    let i = 1, len = s.length
    for (; i < len; i++) {
        if (i === 1) {// 处理掉n = 1的的边界条件
            dp[1] = 2
            if (s[1] === '0') {
                dp[1] -= 1
            }
            if (Number(s[0] + s[1]) > 26) {
                dp[1] -= 1
            }
        } else {
            dp[i] = dp[i - 1] + dp[i - 2]
            if (s[i - 1] === '0') {// 当n - 1项为0时，dp[i - 2]的所有可能都不成立了
                dp[i] -= dp[i - 2]
            }
            if (s[i] === '0') {// 当前项为0时，dp[i - 1]的所有可能都不成立了
                dp[i] -= dp[i - 1]
            }
            if (s[i - 1] !== '0' && Number(s[i - 1] + s[i]) > 26) {
                // n - 1项和n项的组合值大于26时，dp[i - 2]的所有可能都不成立了
                dp[i] -= dp[i - 2]
            }
        }
    }
    return dp[len - 1]
};
